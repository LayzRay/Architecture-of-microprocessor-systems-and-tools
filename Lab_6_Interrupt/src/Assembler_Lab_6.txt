			# Инициализируем начальные значения регистров

    li sp, 0xFFFFFFFC	# Устанавливаем указатель на верхушку стека
    li gp, 0x10000000	# Устанавливаем указатель на глобальные данные

    li t0, 0x00080020	# Подготавливаем маску прерывания для 5 и 19 входов
    csrw mie, t0	# Загружаем маску в регистр маски
    la t0, interrupt	# Аналогично li загружает число, а именно адрес
    csrrw mtvec, t0	# Устанавливаем вектор прерывания
    li t0, 0xEFFFFFFC	# Готовим адрес верхушки стека прерывания
    csrrw mscratch, t0	# Загружаем в указатель на верхушку стека прерывания

    li t0, 1		# Начальное значение глобальной переменной
    sw t0, 0(gp)	# Загружаем переменную память

    li t1, 0		# Начальное значение, чтобы в симуляции не было xxx
    li t2, 0		# Начальное значение, чтобы в симуляции не было xxx

while:			# Бесконечный цикл, аналогичный while(1)
	
    beq x0, x0, while	# Ничего не делаем

			# ОБРАБОТЧИК ПРЕРЫВАНИЯ
			# Сохраняем используемые регистры на стек
    
interrupt:

    csrrw t0, mscratch, t0	# Меняем местами mscratch и t0
    sw    t1, 0(t0)		# Сохраняем t1 на стек mscratch
    sw	  t2, 4(t0)		# Сохраняем t2 на стек mscratch
    			
			# Проверяем регистр причины и на 5-ое прерывание

    csrr  t1, mcause		# t1 = mcause
    li	  t2, 5			# t2 = 5 (код одного из прерываний)
    bne   t1, t2, nineteen	# если это не 5 прерывание, то проверяем 19

			# Обработчик 5-го прерывания

    lw    t2, 0(gp)	# Загружаем переменную из памяти
    addi  t2, t2, 3	# Прибавляем к значению 3
    sw    t2, 0(gp)	# Возвращаем переменную в память
    j     done		# Идём возвращать регистры и на выход

nineteen:		# Проверяем на 19-ое прерывание
   
    li    t2, 19	# t2 = 19 (код другого прерывания)
    bne   t1, t2, done  # Если не 19-ое, то выходим

			# Обработчик 19-го прерывания
    lw    t2, 0(gp)	# Загружаем переменную из памяти
    srli  t2, t2, 1	# Делим число пополам сдвигом вправо
    sw    t2, 0(gp)	# Возвращаем переменную в память
    j     done		# Идём возвращать регистры и на выход

			# Возвращаем регистры на места и выходим
done:
    
    lw	  t1, 0(t0)     # Возвращаем t1 со стека
    lw    t2, 4(t0)	# Возвращаем t2 со стека
    csrrw t0, mscratch, t0	# Меняем обратно местами t0 и mscratch
    mret			# Возвращаем управление программе (PC = mepc)


// Инструкции без работы с системными регистрами

ffc00113
100001b7
00018193
000802b7
02028293
00000297
02428293
f00002b7
ffc28293
00100293
0051a023
00000313
00000393
00000063
0062a023
0072a223
00500393
00731a63
0001a383
00338393
0071a023
01c0006f
01300393
00731a63
0001a383
0013d393
0071a023
0040006f
0002a303
0042a383
